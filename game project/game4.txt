#include<iostream>
#include "iGraphics.h"
using namespace std;
int mposx, mposy;
bool musicOn = true;
char x[20] = { "IMG\\frontx.bmp" };
char a[20][10000] = { "IMG\\Start.bmp", "IMG\\About.bmp", "IMG\\help.bmp", "IMG\\front.bmp", "IMG\\shamim.bmp", "IMG\\mijan.bmp", "IMG\\santo.bmp", "IMG\\soundon.bmp", "IMG\\soundoff.bmp", "IMG\\back.bmp", "IMG\\Exit.bmp", "IMG\\helpcar.bmp", "IMG\\loading.bmp", "IMG\\startcar.bmp", "IMG\\GameOver.bmp", "IMG\\continue.bmp", "IMG\\home.bmp", "IMG\\restart.bmp" };
int v =0;
int y = 15;
int r = 0, g = 0, b = 0, score = 0;
int i, c = 0, gameState = 10;
int l = 560, m = 280, n = 0;
int d = 320,e=740,f=320;
int j = 450, h = 740, k = 0, p = 0, q = 550, s = 740, t = 0, w = 740, u = 650, vv = 1,z=5;
/*
function iDraw() is called again and again by the system.
*/
void iDraw()
{
	//place your drawing codes here
	iClear();
	if (gameState == -1){
		iShowBMP(0, 0, x);
		for (i = 0; i < 3; i++)
		{
			iShowBMP(400+i*120, 10, a[i]);
		}
		iShowBMP(400 + i * 120, 10, a[10]);
		l = 560, m = 280, n = 0;
		d = 320, e = 740, f = 320;
		j = 450, h = 740, k = 0, p = 0, q = 550, s = 740, t = 0, w = 740, u = 650;
	}
	else if (gameState == 10){
		iShowBMP(0, 0, a[12]);
		iSetColor(255, 0, 0);
		iFilledRectangle(100, 50, v, y);
		iSetColor(255, 255, 0);
		iRectangle(100, 50, 800, y);
		iSetColor(255, 255, 255);
		iText(100, 20, "L  O  A  D  I  N  G ....", GLUT_BITMAP_TIMES_ROMAN_24);
	}
	else if (gameState == 0)
	{

		iShowBMP(0, 0, a[3]);
		iShowBMP(10, 70, a[9]);
		iShowBMP(20, 380, a[4]);
		iShowBMP(360, 380, a[5]);
		iShowBMP(700, 380, a[6]);
		iSetColor(255, 0, 0);
		iText(10, 340, "NAME : MD SHAMIM MIAH", GLUT_BITMAP_HELVETICA_18);
		iText(10, 310, "ROLL : 180128", GLUT_BITMAP_HELVETICA_18);
		iSetColor(0, 255, 0);
		iText(360, 340, "NAME : MIJANUR RAHMAN", GLUT_BITMAP_HELVETICA_18);
		iText(360, 310, "ROLL : 180127", GLUT_BITMAP_HELVETICA_18);
		iSetColor(0, 0, 255);
		iText(700 - 20, 340, "NAME : MAHABUBUL ALOM SANTO", GLUT_BITMAP_HELVETICA_18);
		iText(700 - 20, 310, "ROLL : 180129", GLUT_BITMAP_HELVETICA_18);

	}
	else if (gameState == 1)
	{
		exit(0);
	}
	else if (gameState == 2)
	{
		iShowBMP(0, 0, a[11]);
		iSetColor(255, 0, 0);
		iText(470, 500, "** CONTROL GAME **", GLUT_BITMAP_TIMES_ROMAN_24);
		iSetColor(0, 255, 0);
		iText(400, 450, "1. PRESS LEFT BUTTON TO MOVE LEFT", GLUT_BITMAP_HELVETICA_18);
		iText(400, 420, "2. PRESS RIGHT BUTTON TO MOVE RIGHT", GLUT_BITMAP_HELVETICA_18);
		iText(400, 390, "3. PRESS UP BUTTON TO SPEED INCREASE", GLUT_BITMAP_HELVETICA_18);
		iText(400, 360, "4. PRESS DOWN BUTTON TO  SPEED DECREASE", GLUT_BITMAP_HELVETICA_18);
		iText(400, 330, "5. PRESS SPACE BUTTON TO PAUSE GAME ", GLUT_BITMAP_HELVETICA_18);
		iText(400, 300, "5. PRESS SPACE BUTTON TO PAUSE GAME ", GLUT_BITMAP_HELVETICA_18);
		iShowBMP(10, 70, a[9]);
	}
	else if (gameState == 3)
	{
		iShowBMP(0, 0, a[13]);
		iSetColor(112,128, 144);
		iFilledRectangle(270, 0, 460, 700);
		iSetColor(255, 69, 0);
		iFilledRectangle(220, 0, 50, 700);
		iSetColor(255, 69, 0);
		iFilledRectangle(730, 0, 50, 700);
		iSetColor(255, 255, 255);
		iFilledRectangle(410, l, 20,140);
		iFilledRectangle(570, l, 20, 140);
		iFilledRectangle(410, m, 20, 140);
		iFilledRectangle(570, m, 20, 140);
		iFilledRectangle(410, n, 20, 140);
		iFilledRectangle(570, n, 20, 140);
		iSetColor(0, 0, 0);
		iFilledCircle(d, 30, 30);
		iSetColor(0, 255, 0);
		iFilledCircle(f, e, 30);
		iSetColor(0, 0, 255);
		iFilledCircle(j, h, 30);
		iSetColor(255, 0, 0);
		iFilledCircle(q, s, 30);
		iSetColor(255, 255, 0);
		iFilledCircle(u, w, 30);
		if (((q>=d-30)&&(q<=d+30))&&((s>=0)&&(s<=60)))
		{
			gameState = 4;
			vv = 0;
			score = 0;
		}
		if (((j >= d - 30) && (j <= d + 30)) && ((h >= 0) && (h <= 60)))
		{
			gameState = 4;
			vv = 0;
			score = 0;
		}
		if (((f >= d - 30) && (f <= d + 30)) && ((e >= 0) && (e <= 60)))
		{
			gameState = 4;
			vv = 0;
			score = 0;
		}
		if (((u >= d - 30) && (u <= d + 30)) && ((w >= 0) && (w <= 60)))
		{
			gameState = 4;
			vv = 0;
			score = 0;
		}


		iShowBMP(10, 70, a[9]);
		
	}
	else if (gameState == 4)
	{
		iShowBMP(0, 0, a[14]);
		for (i = 0; i < 3; i++)
			iShowBMP(400, 10, a[17]);
		iShowBMP(400 + 120, 10, a[16]);
		iShowBMP(400 + 120 + 120, 10, a[10]);
		l = 560, m = 280, n = 0;
		d = 320, e = 740, f = 320;
		j = 450, h = 740, k = 0, p = 0, q = 550, s = 740, t = 0, w = 740, u = 650;
	}
	else if (gameState == 5)
	{
		iShowBMP(0, 0, x);
		iShowBMP(400, 10, a[15]);
		iShowBMP(400 + 120, 10, a[16]);
		iShowBMP(400 + 120+120, 10, a[10]);
	}
	if (c == 0)
	{
		iShowBMP(10, 10, a[8]);
	}
	else if (c == 1)
	{
		iShowBMP(10, 10, a[7]);
	}


}

/*
function iMouseMove() is called when the user presses and drags the mouse.
(mx, my) is the position where the mouse pointer is.
*/
void iMouseMove(int mx, int my)
{
	//place your codes here
}

/*
function iMouse() is called when the user presses/releases the mouse.
(mx, my) is the position where the mouse pointer is.
*/
void iMouse(int button, int state, int mx, int my)
{
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{

		if (gameState == -1)
		{
			if (mx >= 520 && mx <= 620 && my >= 10 && my <= 60)
			{
				gameState = 0;
			}
			else if (mx >= 760 && mx <= 860 && my >= 10 && my <= 60)
			{
				gameState = 1;
			}
			else if (mx >= 640 && mx <= 740 && my >= 10 && my <= 60)
			{
				gameState = 2;
			}
			else if (mx >= 400 && mx <= 500 && my >= 10 && my <= 60)
			{
				gameState = 3;
				vv = 1;
			}

		}
		else if (gameState == 5)
		{
		 if (mx >= 400 && mx <= 500 && my >= 10 && my <= 60)
		{
			gameState = 3;
			vv = 1;
		}
		 else if (mx >= 520 && mx <= 620 && my >= 10 && my <= 60)
		 {
			 gameState = -1;
		 }
		 else if (mx >= 640 && mx <= 740 && my >= 10 && my <= 60)
		 {
			 gameState = 1;
		 }
		}
		else if (gameState == 4)
		{
			if (mx >= 400 && mx <= 500 && my >= 10 && my <= 60)
			{
				gameState = 3;
				vv = 1;
			}
			else if (mx >= 520 && mx <= 620 && my >= 10 && my <= 60)
			{
				gameState = -1;
			}
			else if (mx >= 640 && mx <= 740 && my >= 10 && my <= 60)
			{
				gameState = 1;
			}
		}
		else if (gameState == 0 || gameState == 2 )
		{
			if (mx >= 10 && mx <= 60 && my >= 70 && my <= 130)
			{
				gameState = -1;
			}
		}
		else if (gameState == 3)
		{
			if (mx >= 10 && mx <= 60 && my >= 70 && my <= 130)
			{
				gameState = 5;
			}
		}
		if (gameState == -1)
		{
			if (mx >= 890 && mx <= 990 && my >= 200 - 70 && my <= 250 - 70)
			{
				gameState = 0;
			}
		}
		if (musicOn == true)
		{
			if (mx >= 10 && mx <= 35 && my >= 10 && my <= 35){
				musicOn = false;
				PlaySound(0, 0, 0);
				c = 1;
			}

		}
		else if (musicOn == false)
		{
			if (mx >= 10 && mx <= 35 && my >= 10 && my <= 35){
				musicOn = true;
				PlaySound("Music\\shamim.wav", NULL, SND_LOOP | SND_ASYNC);
				c = 0;
			}
		}

	}
	if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
	{
		//place your codes here
		r = 255;
		g = 0;
		b = 0;

	}
}
/*iPassiveMouseMove is called to detect and use
the mouse point without pressing any button */

void iPassiveMouseMove(int mx, int my)
{
	//place your code here

	mposx = mx;
	mposy = my;
	if (mx == 2){}        /*Something to do with mx*/
	else if (my == 2){}   /*Something to do with my*/

}

/*
function iKeyboard() is called whenever the user hits a key in keyboard.
key- holds the ASCII value of the key pressed.
*/
void iKeyboard(unsigned char key)
{
	if (key == ' ')
	{
		r = 255;
		g = 0;
		b = 0;
	}
	//place your codes for other keys here
}

/*
function iSpecialKeyboard() is called whenver user hits special keys like-
function keys, home, end, pg up, pg down, arraows etc. you have to use
appropriate constants to detect them. A list is:
GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
*/
void iSpecialKeyboard(unsigned char key)
{

	if (key == GLUT_KEY_END)
	{

	}


	if (key == GLUT_KEY_UP)
	{

	}
	if (key == GLUT_KEY_DOWN)
	{
		
	}
	if (key == GLUT_KEY_LEFT)
	{
		if (d >= 320)
		{
			d = d - 20;
		}
	}
	if (key == GLUT_KEY_RIGHT)
	{
		if ( d <= 680)
		{
			d = d + 20;
		}
	}
	if (key == GLUT_KEY_HOME)
	{
		
	}
	if (key == GLUT_KEY_INSERT)
	{
		
	}
	//place your codes for other keys here
}

void loading()
{
	if (v >= 800){
		iPauseTimer(0);
		gameState = -1;
	}
	else
	{
		v = v + 5;
	}

}
void roadline()
{
	if (l <= -176)
	{
		l = 700;
	}
	else l = l - 5;
	if (m <= -176)
	{
		m = 700;
	}
	else m = m - 5;
	if (n <= -176)
	{
		n = 700;
	}
	else n = n - 5;

}
void carmove()
{
	if (vv == 1){
		if (e <= -60)
		{
			score++;
			cout << score << endl;
			e = 700;
			f = rand() % 730;
			if (f <= 270)
			{
				f = f + 270;
			}
		}
		else{
			if (gameState == 3)
				e = e - z;
			if (e <= 500)
			{
				k = 1;
			}
			if (e <= 350)
			{
				p = 1;
			}
			if (e <= 150)
			{
				t = 1;
			}

		}
		if (k == 1)
		{
			if (h <= -60)
			{
				h = 700;
				j = rand() % 730;
				if (j <= 270)
				{
					j = j + 270;
				}
				score++;
				cout << score << endl;
			}
			else{
				if (gameState == 3)
					h = h - z;
			}
		}
		if (p == 1)
		{
			if (s <= -60)
			{
				score++;
				cout << score << endl;
				s = 700;
				q = rand() % 730;
				if (q <= 270)
				{
					q = q + 270;
				}
			}
			else{
				if (gameState == 3)
					s = s - z;
			}
		}
		if (t == 1)
		{
			if (w <= -60)
			{
				w = 700;
				u = rand() % 730;
				if (u <= 270)
				{
					u = u + 270;
				}
				score++;
				cout << score << endl;
			}
			else{
				if (gameState == 3)
					w = w - z;
			}
		}

	}
}
int main()
{
		iSetTimer(1, loading);
		iSetTimer(1, roadline);
		iSetTimer(1, carmove);
	if (musicOn)
		PlaySound("Music\\shamim.wav", NULL, SND_LOOP | SND_ASYNC);
	//place your own initialization codes here.
	iInitialize(1000, 700, "car raching");
	return 0;

}